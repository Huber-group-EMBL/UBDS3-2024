---
title: "single cell experiment preprocessing"
output: html_document
execute:
    eval: false
html:
    embed-resources: true
    callout-appearance: default
    table-of-contents: true

date: "2024-07-11"
---

# Check versions
First check you have the correct R and Bioconductor:

  + R should be 4.4.1
  + Bioconductor should be 3.19
  
```{r, eval=FALSE}
R.version$version.string
BiocManager::version()
```

If good, go to the next step, if not, do the following

:::{.callout-note title="update R version" collapse="true"}
Download latest version from here https://cran.r-project.org/bin/macosx/ - will find a .pkg on the left <br/>
Open the package and follow instruction from installer
:::

:::{.callout-note title="reset Bioconductor" collapse="true"}
```{r, eval=F}
#| eval: false
if (!require("BiocManager", quietly = TRUE))
  install.packages("BiocManager")
BiocManager::install(version = "3.19")
```

You may have a message that says: <br>

> 
> updgrade/downgrade ... packages to Bioconductor version "3.19"?  [y/n]: 

If this happens, type `y`. If you have and Error that says it's not possible, try it with; and type `y` again when asked. This might take a bit of time. 
```{r, eval=FALSE}
#| eval: false
BiocManager::install(version = "3.19", force = TRUE)
```

#### make sure we have the packages for the correct version, let's reinstall them
```{r, eval=FALSE}
#| eval: false
pkgs = c("dplyr","scran", "scater","ggplot2","ExperimentHub")
BiocManager::install(pkgs, dependencies = TRUE, force=TRUE)
```

#### Look for Bioc cache and delete
```{r}
#| eval: false

# We need to look for the folder where the cache of R has been stored.
# try to look in here
bfcinfo()$rpath

# alternatively look for a folder that looks something like this (on Mac)
ls ~/Library/Caches/org.R-project.R/R/ExperimentHub/
```
:::

# Loading the libraries 
```{r load-libs}
library(dplyr)
library(scran)
library(scater)
library(ggplot2)
library(ExperimentHub)
```


# Set data for the single cell experiment
## Loading the data
```{r }
#| eval: false

eh <- ExperimentHub()
q <- query(eh, "Kang18")
sce <- eh[[q$ah_id]]
```

## Preprocessing
```{r}
#| eval: false
sce <- sce[rowSums(counts(sce) > 0) > 0, ]
sce <- addPerCellQC(sce)
sce <- sce[, !isOutlier(sce$detected, nmads=2, log=TRUE)]
sce <- sce[rowSums(counts(sce) > 1) >= 10, ]
```

